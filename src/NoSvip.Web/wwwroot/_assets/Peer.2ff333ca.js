import{s as e}from"./WebSocketManager.6ab963fb.js";var n=function(e,n,t){return e(t={path:n,exports:{},require:function(e,n){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==n&&t.path)}},t.exports),t.exports}((function(e){var n=Object.prototype.hasOwnProperty,t="~";function o(){}function s(e,n,t){this.fn=e,this.context=n,this.once=t||!1}function i(e,n,o,i,r){if("function"!=typeof o)throw new TypeError("The listener must be a function");var c=new s(o,i||e,r),a=t?t+n:n;return e._events[a]?e._events[a].fn?e._events[a]=[e._events[a],c]:e._events[a].push(c):(e._events[a]=c,e._eventsCount++),e}function r(e,n){0==--e._eventsCount?e._events=new o:delete e._events[n]}function c(){this._events=new o,this._eventsCount=0}Object.create&&(o.prototype=Object.create(null),(new o).__proto__||(t=!1)),c.prototype.eventNames=function(){var e,o,s=[];if(0===this._eventsCount)return s;for(o in e=this._events)n.call(e,o)&&s.push(t?o.slice(1):o);return Object.getOwnPropertySymbols?s.concat(Object.getOwnPropertySymbols(e)):s},c.prototype.listeners=function(e){var n=t?t+e:e,o=this._events[n];if(!o)return[];if(o.fn)return[o.fn];for(var s=0,i=o.length,r=new Array(i);s<i;s++)r[s]=o[s].fn;return r},c.prototype.listenerCount=function(e){var n=t?t+e:e,o=this._events[n];return o?o.fn?1:o.length:0},c.prototype.emit=function(e,n,o,s,i,r){var c=t?t+e:e;if(!this._events[c])return!1;var a,h,l=this._events[c],p=arguments.length;if(l.fn){switch(l.once&&this.removeListener(e,l.fn,void 0,!0),p){case 1:return l.fn.call(l.context),!0;case 2:return l.fn.call(l.context,n),!0;case 3:return l.fn.call(l.context,n,o),!0;case 4:return l.fn.call(l.context,n,o,s),!0;case 5:return l.fn.call(l.context,n,o,s,i),!0;case 6:return l.fn.call(l.context,n,o,s,i,r),!0}for(h=1,a=new Array(p-1);h<p;h++)a[h-1]=arguments[h];l.fn.apply(l.context,a)}else{var f,u=l.length;for(h=0;h<u;h++)switch(l[h].once&&this.removeListener(e,l[h].fn,void 0,!0),p){case 1:l[h].fn.call(l[h].context);break;case 2:l[h].fn.call(l[h].context,n);break;case 3:l[h].fn.call(l[h].context,n,o);break;case 4:l[h].fn.call(l[h].context,n,o,s);break;default:if(!a)for(f=1,a=new Array(p-1);f<p;f++)a[f-1]=arguments[f];l[h].fn.apply(l[h].context,a)}}return!0},c.prototype.on=function(e,n,t){return i(this,e,n,t,!1)},c.prototype.once=function(e,n,t){return i(this,e,n,t,!0)},c.prototype.removeListener=function(e,n,o,s){var i=t?t+e:e;if(!this._events[i])return this;if(!n)return r(this,i),this;var c=this._events[i];if(c.fn)c.fn!==n||s&&!c.once||o&&c.context!==o||r(this,i);else{for(var a=0,h=[],l=c.length;a<l;a++)(c[a].fn!==n||s&&!c[a].once||o&&c[a].context!==o)&&h.push(c[a]);h.length?this._events[i]=1===h.length?h[0]:h:r(this,i)}return this},c.prototype.removeAllListeners=function(e){var n;return e?(n=t?t+e:e,this._events[n]&&r(this,n)):(this._events=new o,this._eventsCount=0),this},c.prototype.off=c.prototype.removeListener,c.prototype.addListener=c.prototype.on,c.prefixed=t,c.EventEmitter=c,e.exports=c}));class t extends n{constructor(){super(),this.roomId=null,this.peerConnection=null,this.dataChannel=null,this.isCaller=null,this.sendMessage=this.sendMessage.bind(this),this.setupDataChannel=this.setupDataChannel.bind(this),this.createRTCConnection=this.createRTCConnection.bind(this),this.onDescription=this.onDescription.bind(this),this.onIceCandidate=this.onIceCandidate.bind(this),this.connectPeer=this.connectPeer.bind(this),this.onConnectionStateChange=this.onConnectionStateChange.bind(this),this.onChannelOpen=this.onChannelOpen.bind(this),this.onChannelClose=this.onChannelClose.bind(this),this.onReceiveMessage=this.onReceiveMessage.bind(this)}connectPeer(e,n){n?console.log("start connect peer..."):console.log("waiting for remote description... (offer)"),this.roomId=e,this.createRTCConnection(n)}createRTCConnection(e){const n=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"stun:global.stun.twilio.com:3478?transport=udp"}]});if(this.peerConnection=n,n.onconnectionstatechange=e=>this.onConnectionStateChange(e),n.onicecandidate=this.onIceCandidate,this.isCaller=e,e){const e=n.createDataChannel("file-transfer",{ordered:!0});this.setupDataChannel(e),this.createOffer()}else this.peerConnection.ondatachannel=e=>{const n=e.channel||e.target;this.setupDataChannel(n)}}createOffer(){console.log("create offer."),this.peerConnection.createOffer().then(e=>{this.onDescription(e)})}createAnswer(){console.log("create answer."),this.peerConnection.createAnswer().then(e=>{this.onDescription(e)})}onDescription(e){this.peerConnection.setLocalDescription(e).then(()=>{this.sendMessage(e)}).catch(e=>console.log("onDescription error: ",e))}onIceCandidate(e){e.candidate&&this.sendMessage({ice:e.candidate})}onConnectionStateChange(){"disconnected"===this.peerConnection.connectionState?(this.peerConnection&&this.peerConnection.close(),this.emit("disconnected")):"connected"===this.peerConnection.connectionState?this.emit("connected"):"connecting"===this.peerConnection.connectionState?this.emit("connecting"):"failed"===this.peerConnection.connectionState&&this.emit("connectFailed"),console.log("onConnectionStateChange: ",this.peerConnection.connectionState)}setupDataChannel(e){this.dataChannel=e,e.bufferedAmountLowThreshold=262144,e.binaryType="arraybuffer",e.onopen=this.onChannelOpen,e.onclose=this.onChannelClose,e.onerror=this.onChannelError}onChannelOpen(e){console.log("## channel open: ",e),this.dataChannel.onmessage=this.onReceiveMessage}onChannelClose(e){console.log("## channel close: ",e)}onChannelError(e){console.log("## channel error: ",e)}signalingMessageCallback(e){"offer"===e.type?(console.log("Got offer. Sending answer to peer."),this.peerConnection.setRemoteDescription(new RTCSessionDescription(e)).then(e=>{this.createAnswer()})):"answer"===e.type?(console.log("Got answer."),this.peerConnection.setRemoteDescription(new RTCSessionDescription(e))):e.ice&&(console.log("Got candidate."),this.peerConnection.addIceCandidate(e.ice).catch(e=>{console.log("Failure during addIceCandidate(): "+e.name)}))}onReceiveMessage(){this.emit("onReceiveMessage","hello world!")}sendData(){this.dataChannel.send("hello world!")}sendMessage(n){console.log("Client sending message: ",n),e.invoke("SendMessage",this.roomId,n).catch((function(e){return console.error(e.toString())}))}logError(e){e&&("string"==typeof e?console.warn(e):console.warn(e.toString(),e))}}export{t as P};
